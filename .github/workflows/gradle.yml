name: Gradle Build

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
    - uses: actions/checkout@v4

    - name: Set up JDK 21 with GraalVM
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'graalvm'
        cache: 'gradle'

    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@v4.0.0
      with:
        # Arbeitet im Backend-Ordner
        working-directory: ./Backend

    - name: Build Backend with Gradle
      working-directory: ./Backend
      run: |
        # Repliziere Docker-Build-Parameter mit Speicher-Optimierungen
        ./gradlew clean build -x test \
          --no-daemon \
          -Dorg.gradle.jvmargs="-Xmx4g -XX:MaxMetaspaceSize=2g" \
          -Dkotlin.daemon.jvmargs="-Xmx4g"

  dependency-submission:
    runs-on: ubuntu-latest
    needs: build  # Warte auf erfolgreichen Build
    permissions:
      contents: write

    steps:
    - uses: actions/checkout@v4

    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'  # Für Dependency Submission reicht Temurin
        cache: 'gradle'

    - name: Submit Backend Dependencies
      uses: gradle/actions/dependency-submission@v4.0.0
      with:
        working-directory: ./Backend
        # Für große Projekte: Erhöhe Speicher für Dependency-Extraktion
        arguments: -Dorg.gradle.jvmargs="-Xmx2g"